序：资本化，工业化，流水化，革旧创新，资本化。周而复始

如果说爱码仕的业务编程是为各行业客户节流，那么编写Spring框架的爱码仕便是为千千万万的爱码仕的业务编程工作开源节流

注解-让程序帮助开发人员管理对象生命周期

story 开端，spring 管理IO端的对象（网络IO、磁盘IO等）不能只是简单初始化无参构造函数创建，因为IO端的对象的创建策略依赖IO端的约束。

所以需要在自定义逻辑注入IO端对象进入Spring 容器。

案例，测试的数据一般为临时变量，通过配置管理，操作java对象来提取信息比较方便。需要从yaml文件中信息（测试数据）创建java对象，并注入容器中。

目标：WHAT
    注入需要参数，yaml文件路径（目录路径、文件名）配置（通过注解入参，而且要方便编程）
    注入yaml文件java对象。对于系统来说，yaml文件的信息是待注入java对象的镜像，注入到容器，只是把yaml信息镜像转换成java对象在注入容器（目前已有
    现成的yaml信息转java对象功能，直接利用节约时间，拯救生命）
    
执行：HOW
    平常我们只是配置xml文件来注入bean，如果将yaml信息配置在xml文件创建bean则不够灵活，需要大量配置（xml结构繁琐），不利按需注入和
    移植（团队之间的测试yaml信息共享）
    Spring 的对象是怎么注入的。有xml注入、注解注入，它是怎么管理的。通过什么来收集xml配置、注解信息，是怎么触发来收集指定的信息。
    收集信息后是怎样创建对象的，有是怎样管理对象生命周期的。
    
    查找spring扫描配置、注解原理，为系统增加注解功能
    结果：context:component-scan标签是扫描入口点，context:include-filter type="annotation" 增加注解标识
    
    查找spring创建依赖bean原理，如何扩展支持自定义注入依赖bean。Spring肯定有对象初始化期注入管理，才能解决依赖注入。
    结果BeanPostProcessor接口，spring监听对象创建会触发BeanPostProcessor实现类对象（创建对象前、后监听，这里可以处理依赖注入），
    ApplicationContextAware注入容器接口（可将自定义的bean注入容器），不过需要将这两个接口实现类对象注入Spring容器，该容器才能呢起到监听，依赖注入功能
